Rails.application.routes.draw do
  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html

  # TODO 🍩 figure out how to extract this for the sprinkles gem.
  # e.g. `resources :things, concerns: [:sortable]`
  concern :sortable do
    collection do
      post :reorder
    end
  end

  api_actions = [:index, :create, :show, :update, :destroy]
  collection_actions = [:index, :new, :create]

  if subscriptions_enabled?

    # this is the gem we use for managing pricing pages, stripe subscriptions, etc.
    mount Koudoku::Engine, at: 'koudoku'
    scope module: 'koudoku' do
      get 'pricing' => 'subscriptions#index', as: 'pricing'
    end
  end

  devise_for :users, controllers: {
    registrations: 'registrations',
    omniauth_callbacks: 'account/oauth/omniauth_callbacks'
  }

  scope module: 'public' do
    root to: "home#index"
    get 'api' => 'home#api'
  end
  authenticate :user, lambda { |u| u.developer? } do

    # # RAILS ADMIN
    # # ⚠️ this is commented out because it represents a major liability for you and a major risk for your customers data
    # # unless you have a robust security policy enforced around your admin user accounts. i don't know if we'll ever
    # # enable this by default, but i certainly wouldn't enable it in any application that didn't require two-factor
    # # authentication for developer accounts.
    # mount RailsAdmin::Engine => '/developers/admin', as: 'rails_admin'

    # sidekiq provides a web-based interface.
    require 'sidekiq/web'
    mount Sidekiq::Web => '/developers/sidekiq'
  end

  namespace :webhooks do
    namespace :incoming do
      resources :bullet_train_webhooks
      resources :stripe_webhooks
      namespace :oauth do
        resources :stripe_account_webhooks
      end
    end
  end

  shallow do
    namespace :api do
      namespace :v1 do
        get 'user' => 'user#user'
        resources :teams do

          unless scaffolding_things_disabled?
            namespace :scaffolding do
              resources :things, only: api_actions unless scaffolding_things_disabled?
              namespace :absolutely_abstract do
                resources :creative_concepts, only: api_actions
              end
              resources :absolutely_abstract_creative_concepts, path: 'absolutely_abstract/creative_concepts' do
                namespace :completely_concrete do
                  resources :tangible_things, only: api_actions
                end
              end
            end
          end

          namespace :kanban do
            resources :boards, only: api_actions do
              resources :tags
              resources :columns, only: api_actions do
                resources :cards, only: api_actions
              end
            end
          end

          resources :conversations, only: api_actions do
            namespace :conversations do
              resources :messages, only: api_actions
            end
          end

          # don't remove or edit the following comment or you'll break super scaffolding.
          # the following api routes were added by super scaffolding.

        end
      end
      namespace :webhooks do
        namespace :outgoing do
          resources :events
          resources :endpoints do
            resources :deliveries, only: [:index, :show] do
              resources :delivery_attempts, only: [:index, :show]
            end
          end
        end
      end
    end
  end

  namespace :account do

    # TODO we need to either implement a dashboard or deprecate this.
    root to: "dashboard#index", as: 'dashboard'

    # this is the route the cloudinary field hits.
    namespace :cloudinary do
      resources :upload_signatures
    end

    # user-level onboarding tasks.
    namespace :onboarding do
      resources :user_details
      resources :user_email
    end

    # user specific resources.
    shallow do
      resources :users do
        resources :api_keys

        namespace :conversations do
          resources :subscriptions do
            member do
              post :subscribe
              post :unsubscribe
            end
          end
        end
      end
    end

    # team-level resources.
    shallow do
      resources :teams do

        resources :sites

        namespace :oauth do
          resources :stripe_accounts if stripe_enabled?
          resources :twitter_accounts if twitter_enabled?
          resources :facebook_accounts if facebook_enabled?
          # 🚅 super scaffolding will insert new oauth providers above this line.
        end

        namespace :webhooks do
          namespace :outgoing do
            resources :events
            resources :endpoints do
              resources :deliveries, only: [:index, :show] do
                resources :delivery_attempts, only: [:index, :show]
              end
            end
          end
        end

        namespace :kanban do
          resources :boards do
            resources :tags
            resources :columns, concerns: [:sortable] do
              resources :cards, concerns: [:sortable] do
                member do
                  post :convert_to_challenge
                end
              end
              collection do
                post :reassign_cards
              end
              member do
                get :remove
              end
            end
          end
        end

        resources :conversations do
          namespace :conversations do
            resources :messages
          end
        end

        # add your resources here.
        unless scaffolding_things_disabled?
          namespace :scaffolding do
            resources :things
            namespace :absolutely_abstract do
              resources :creative_concepts
            end
            resources :absolutely_abstract_creative_concepts, path: 'absolutely_abstract/creative_concepts' do
              namespace :completely_concrete do
                resources :tangible_things
              end
            end
          end
        end

        # don't remove or edit the following comment or you'll break super scaffolding.
        # the following routes were added by super scaffolding.

        resources :invitations do
          member do
            get :accept
            post :accept
          end
        end

        resources :memberships do
          member do
            post :demote
            post :promote
          end
        end
      end
      member do
        post :switch_to
      end
    end
  end

  if demo?
    get '/call', to: redirect('https://calendly.com/bullettrain/introductions'), as: 'call'
  end
end
